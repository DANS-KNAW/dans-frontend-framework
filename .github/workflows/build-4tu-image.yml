name: 4TU Docker Image CI

on:
  push:
    paths:
      - 'apps/4tu/**'
    tags:
      - "v*"
  workflow_dispatch:

jobs:

  test:

    runs-on: ubuntu-latest 
    strategy:
      matrix:
        node-version: ["18"]
    name: Run tests
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Set node version
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install git
        npm i -g turbo
        npm i -g pnpm
    - name: Run tests
      run: "echo 'setup complete' "

  push:
    name: Push to registry
    runs-on: ohsmart-demo
    needs: test
    strategy:
      matrix:
        node-version: ["18"]

    env:
      USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      IMAGE_NAME: "dans-frontend-framework-4tu"
      ORG: "dansknaw"
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 
    
    - name: Determine Image Tag
      id: tag
      run: |
        if [ "${{ github.ref }}" = refs/tags/v* ]; then
          IMAGE_TAG="${GITHUB_REF#refs/tags/}"
        elif [[ "${{ github.ref }}" == refs/heads/github-action-update ]]; then
          STAGING_COMMIT=$(git rev-parse origin/github-action-update)
          IMAGE_TAG="staging-${STAGING_COMMIT}"
        else
          echo "Skipping image push for non-demo and non-tag push."
          exit 1
        fi
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
  
    - name: Login to registry
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Copy file
      run: "cp /data/secrets/4tu/.env.production apps/4tu/."
    - name: Push to dockerhub
      run: |
        docker build -f apps/4tu/Dockerfile . -t $ORG/$IMAGE_NAME:$IMAGE_TAG
        docker push $ORG/$IMAGE_NAME:$IMAGE_TAG
